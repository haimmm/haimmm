advanced topics for free time: 
1. clossures
2. curring
3. debounce & throttle
4.accesability


things to learn next:
1. accesability
2. react

function debounce(fn, wait){
  let timeoutId;
  return function(){
    const args = arguments;  
    if(timeoutId) clearTimeout(timeoutId);
    timeoutId = setTimeout(function(){
      timeoutId = null;
      fn.apply(null, args);
    }, wait);
  }
}

function throttle(fn, wait){
  let timeoutId;
  return function(){
    const args = arguments;  
    if(timeoutId) return;
    timeoutId = setTimeout(function(){
      timeoutId = null;
      fn.apply(null, args);
    }, wait);
  }
}


1. learn how to make multi color chart (https://www.chartjs.org/docs/latest/samples/line/segments.html)

-------------------
https://codepen.io/haimmm/pen/vYebbmg

<div id="marqueeContainer" class="marquee-container">
  <div id="marquee" class="marquee">
  Just some random text blablabla 123 blablabla 123
  </div>
  <div id="marqueeCopy" class="marquee">
  Just some random text blablabla 123 blablabla 123
  </div>
</div>
-------
body{
  border: 2px solid red;
  height: 100vh;
  max-width: 600px;
  margin: auto;
}

.marquee-container{
  width: 100%;
  height: 60px;
  line-height: 60px;
  border-bottom: 2px solid grey;
  opacity: 0.6;
  position: relative;
  left: 0;
  top: 0;
/*    overflow: hidden;  */
/*   z-index: 100; */
}

.marquee {
  display: inline-block;
  position: absolute;
  min-width: 100%;
  font-size: 2rem;
  border: 1px solid green;
  white-space: nowrap;
/*   animation: marq 10s infinite; */
}

/* @keyframes marq {
  100% { left: 200px }
} */
------
const marqContainer = document.getElementById("marqueeContainer");
const marq  = document.getElementById("marquee");
const marq2 = document.getElementById("marqueeCopy");

const marqWidth = marq.offsetWidth;
const containerWidth = marqContainer.offsetWidth;

marq.style.left = `${-marqWidth}px`;
marq2.style.left = `${-marqWidth}px`;
//marq2.style.left = `${-2 * marqWidth}px`;

// const path = 2 * marqWidth;
const time = 8000;
// const pxPerSecond = path / time;
// const delay = marqWidth / pxPerSecond; 

marq.animate([
  // keyframes
  {left: `${marqWidth}px`}
], {
  // timing options
  duration: time,
  iterations: Infinity
});

marq2.animate([
  // keyframes
  {left: `${marqWidth}px`}
], {
  // timing options
  duration: time,
  iterations: Infinity,
  delay: time/2
});
